<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Task | SmartReach Hub</title>
  <style>
    body {
      background: linear-gradient(to bottom right, gold, #006400);
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      margin: 0;
      padding: 0;
    }
    header {
      background-color: white;
      padding: 20px;
      text-align: center;
      box-shadow: 0 2px 5px rgba(0,0,0,0.2);
    }
    header h1 {
      color: #006400;
      margin: 0;
    }
    header p {
      color: #555;
      margin-top: 5px;
    }
    .container {
      background-color: white;
      margin: 20px;
      padding: 20px;
      border-radius: 15px;
      box-shadow: 0 0 10px rgba(0,0,0,0.2);
    }
    h2 {
      color: #006400;
      text-align: center;
    }
    .task {
      background: #f5f5f5;
      padding: 15px;
      margin: 10px 0;
      border-radius: 10px;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }
    .task p {
      margin: 0;
      color: #333;
    }
    .task button {
      padding: 10px 15px;
      background-color: #006400;
      color: white;
      border: none;
      border-radius: 8px;
      cursor: pointer;
      transition: background 0.3s;
    }
    .task button:hover {
      background-color: #228B22;
    }
    .completed {
      background-color: gray !important;
      cursor: not-allowed;
    }
    .summary {
      margin-top: 20px;
      text-align: center;
      font-weight: bold;
      color: #006400;
    }
    footer {
      text-align: center;
      padding: 10px;
      color: white;
      background-color: rgba(0, 0, 0, 0.3);
      margin-top: 20px;
    }
  </style>
</head>
<body>

  <header>
    <h1>SmartReach Hub</h1>
    <p>Your Online Business Partner</p>
  </header>

<nav style="background-color: #006400; padding: 10px; text-align: center;">
  <a href="index.html" style="color: white; margin: 0 15px; text-decoration: none;">Home</a>
  <a href="task.html" style="color: white; margin: 0 15px; text-decoration: none;">Task</a>
  <a href="vip.html" style="color: white; margin: 0 15px; text-decoration: none;">VIP</a>
  <a href="profit.html" style="color: white; margin: 0 15px; text-decoration: none;">Profit</a>
  <a href="myaccount.html" style="color: white; margin: 0 15px; text-decoration: none;">My Account</a>
  <a href="contact.html" style="color: white; margin: 0 15px; text-decoration: none;">Contact Us</a>
</nav>

  <div class="container">
    <h2>Daily Tasks</h2>

    <div id="tasks"></div>

    <div class="summary">
      <p id="status">Completed: 0 | Remaining: --</p>
      <p id="earnings">Earnings Today: KES 0</p>
    </div>
  </div>

  <footer>
    &copy; 2025 SmartReach Hub | All rights reserved.
  </footer>

  <script>
    // ðŸš¨ Placeholder J Level â€” update later with backend
    const jLevel = "J1"; // Change manually to J2, J3 etc. for testing

    // ðŸŽ¯ Number of tasks based on J Level
    const taskMapping = {
      "J1": 4,
      "J2": 9,
      "J3": 10,
      "J4": 16,
      "J5": 23,
      "J6": 53,
      "J7": 143,
      "J8": 210,
      "J9": 445
    };

    const totalTasks = taskMapping[jLevel] || 0;
    let completedTasks = 0;
    const earningsPerTask = 20;
    let earnings = 0;

    const tasksContainer = document.getElementById("tasks");
    const status = document.getElementById("status");
    const earningsDisplay = document.getElementById("earnings");

    // Generate tasks dynamically
    for (let i = 1; i <= totalTasks; i++) {
      const taskDiv = document.createElement("div");
      taskDiv.classList.add("task");
      taskDiv.innerHTML = `
        <p>Watch Ad ${i}</p>
        <button onclick="completeTask(this)">Complete</button>
      `;
      tasksContainer.appendChild(taskDiv);
    }

    function completeTask(button) {
      button.disabled = true;
      button.classList.add("completed");
      button.innerText = "Completed";

      completedTasks++;
      earnings += earningsPerTask;

      updateStatus();
    }

    function updateStatus() {
      status.innerText = `Completed: ${completedTasks} | Remaining: ${totalTasks - completedTasks}`;
      earningsDisplay.innerText = `Earnings Today: KES ${earnings}`;
    }

    updateStatus();
  </script>

</body>
</html>